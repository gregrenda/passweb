#!/usr/bin/perl -- # -*-Perl-*-

# MIT License
#
# Copyright (c) 2025 Greg Renda
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

use strict;
use warnings;
use Getopt::Long;

# for container
$SIG{TERM} = sub { die };
$SIG{INT} = sub { die };

my ($container, $timeout) = (0, 60);

GetOptions('container'=>\$container, 'timeout=i'=>\$timeout);
my ($store, $port) = @ARGV;

$store ||= '';
$store =~ s%/$%%;      # strip trailing /

die "$0: <password-store> <http port>\n" unless -d $store and $port;
die "Can't read $store/.gpg-id\n" unless -r "$store/.gpg-id";

PassWebServer->new($port)->run();

package PassWebServer;
use base qw(HTTP::Server::Simple::CGI);

use constant DISPATCH =>
{
    '/pass' => \&pass,
    '/view' => \&view,
    '/edit' => \&edit,
    '/save' => \&save,
    '/add' => \&add,
    '/sync' => \&sync,
    '/delete' => \&delete,
    '/rename' => \&rename,
    '/passphrase' => \&passphrase,
};

use constant RESYNC_SECONDS		=> 60 * 60;
use constant DEFAULT_NUM_PASS_WORDS	=> 4;
use constant AGENT			=> '/tmp/agent';

sub new
{
    my $class = shift;
    my $s = $class->SUPER::new(@_);

    $s->{dataPos} = tell DATA;	# remember start of DATA position
    $s->{lastSync} = 0;
    $s->getTree;
    $s;
}

sub print_banner {}	# get rid of the default banner

sub handle_request
{
    my ($s, $cgi) = @_;
    $s->{cgi} = $cgi;
    my $path = $s->{cgi}->path_info();

    local $SIG{CHLD} = sub { $?; };

    $path = '/pass' unless exists DISPATCH()->{$path};
    print "HTTP/1.0 200 OK\r\n";
    DISPATCH()->{$path}->($s);
    print "</body>\n</html>\n";
}

sub error
{
    my ($s, $msg) = @_;

    $s->startPage('Error');
    print <<END;
<h1>Error</h1>
$msg.
<p>
<button onclick='history.back()'>Back</button>
END
}

sub rename
{
    my $s = shift;
    my ($path, $urlPath) = $s->getPath;

    $s->startPage("Rename: $path");
    print <<END;
<form action="/pass" method="get">
  Rename <b>$path</b> to<p>
  <input type="text" name="rename" value="$path" size="40"/><p>
  <input type="hidden" name="path" value="$path"/>
  <input type="submit" value="Rename"/>
  <button type="button" onclick='window.open("/pass", "_self")'>Cancel</button>
</form>
END
}

sub git
{
    my ($s, $cmd, $agent) = @_;

    $agent = $agent ? ". @{[AGENT]} > /dev/null;" : '';
    $s->{gitOutput} = qx/$agent 2>&1 git -C '$store' $cmd/;
    !$?;
}

sub doSync
{
    my $s = shift;
    my $result;

    if (!$container or -r AGENT)
    {
	$s->git("$_ -v", $container), $result .= $s->{gitOutput} for
	    qw(fetch rebase push);
	$s->{lastSync} = time;
    }
    else
    {
	$result = "Can't configure ssh-agent";
    }

    $result;
}

sub sync
{
    my $s = shift;

    my $result = $s->doSync;
    $s->startPage('Sync');
    print <<END;
<pre>$result</pre><p>
<button onclick="window.open('/pass?refresh=1', '_self')">Done</button>
END
}

use constant MAX_LENGTH	=> 8;
use constant MIN_LENGTH	=> 3;
use constant SYMBOLS	=> '!"#$%&\'()*+,-./:;<=>?@[\\]^_`';

sub genpass
{
    my ($s, $numWords) = @_;
    my @words;

    seek DATA, $s->{listPos}, 0;	# seek to the start of the word list
    my @list = map {chomp $_; $_} <DATA>;

    for (1..$numWords)
    {
	my $word;

	do
	{
	    $word = $list[int(rand(@list))];
	} while ($word =~ /[^a-z]/ or length $word > MAX_LENGTH or
		 length $word < MIN_LENGTH);

	push @words, ucfirst $word;
    }

    join '', @words,
	int(rand(10)), substr(SYMBOLS, int(rand(length SYMBOLS)), 1);
}

sub add
{
    my $s = shift;
    my ($path, $urlPath) = $s->getPath;
    my $name = $s->{cgi}->param('name') || '';
    $name =~ s/^\s*|\s*$//g;
    my $numWords = $s->{cgi}->param('numWords') || DEFAULT_NUM_PASS_WORDS;
    my $data = $s->{cgi}->param('data') || '';
    my $pass = '';

    $pass = $s->genpass($numWords) if $s->{cgi}->param('generate');
    $pass =~ s/"/&quot;/g;

    $s->startPage("Add: $path");
    print <<END;
<script>
function genPass()
{
    var numWords = document.getElementById("numWords").value;
    var path = document.getElementById("path").value;
    var name = document.getElementById("name").value;
    var data = document.getElementById("data").value;

    window.open("/add?generate=1&path=" + encodeURIComponent(path) + "&numWords=" + numWords + "&name=" + encodeURIComponent(name) + "&data=" + data, "_self");
}
</script>
<form action="/save" method="post">
Path <input type="text" id="path" name="path" value="$path" placeholder="Path..."/>
Name <input type="text" id="name" name="name" value="$name" placeholder="Name..." />
<input type="hidden" name="add" value="1"/>
<input type="checkbox" name="topOk">Add to top level</input>
<p>
Password <input type="text" name="pwd" value="$pass" size="32" placeholder="Password..."/>
<button type="button" onclick="genPass()">Generate</button>
Number of words <input type="text" id="numWords" value="$numWords" size="2"/>
<p>
<textarea name="data" id="data" cols="80" rows="10">$data</textarea>
<p>
<button type="submit">Save</button>
<button type="button" onclick="window.open('/pass', '_self')">Cancel</button>
</form>
END
}

sub save
{
    my $s = shift;
    (my $path = $s->{cgi}->param('path')) =~ s%^/|/$%%g;
    (my $name = $s->{cgi}->param('name') || '') =~ s/^\s*|\s*$//g;
    my $password = $s->{cgi}->param('pwd');
    my $data = $s->{cgi}->param('data');
    my $add = $s->{cgi}->param('add');

    return $s->error("Empty password") if $password =~ /^\s*$/;
    return $s->error("Can't use apostrophe in name") if $name =~ /'/;
    return $s->error("Can't use apostrophe in path") if $path =~ /'/;

    if ($add)
    {
	return $s->error('No name specified') unless $name;
	return $s->error("Check the 'Add to top level' box to add to the top level") unless
	    $path or $s->{cgi}->param('topOk');

	qx%mkdir -p '$store/$path'% if $path;
	$path = $path ? "$path/$name" : $name;
	return $s->error("$path already exists") if
	    -d "$store/$path" or -f "$store/${path}.gpg";
    }

    open my $ids, "$store/.gpg-id" or return $s->error("Can't open .gpg-ids");

    my $recipients;
    $recipients .= '-r '.join(' -r ', map { s/[\r\n]$//gr } <$ids>);
    close $ids;

    return $s->error('Empty path') unless $path;
    open my $gpg, "|gpg -q -e $recipients > '$store/${path}.gpg'" or
	return $s->error("Error writing $path");
    print $gpg "$password\n$data";
    close $gpg;

    my $msg;

    if ($add)
    {
	$s->hashify($path);
	$s->git("add '${path}.gpg'");
	$msg = 'added';
    }
    else
    {
	$msg = 'edited';
    }

    $s->git("commit -m '$msg $path' '${path}.gpg'");
    $s->view($path);
}

sub edit
{
    my $s = shift;
    my ($path, $urlPath) = $s->getPath;

    $s->getPassphrase($path) or return;
    my ($pass, $data) = $s->readPass($path);
    return $s->error("Can't decrypt") unless defined $pass;
    my $numWords = $s->{cgi}->param('numWords') || DEFAULT_NUM_PASS_WORDS;

    $pass = $s->genpass($numWords) if $s->{cgi}->param('generate');
    $pass =~ s/"/&quot;/g;

    $s->startPage("Edit: $path");
    print <<END;
<script>
function genPass()
{
    var numWords = document.getElementById("numWords").value;
    window.open("/edit?generate=1&path=$urlPath&numWords=" + numWords, "_self");
}
</script>
<h2>$path</h2>
<form action="/save" method="post">
Password <input type="text" name="pwd" value="$pass" size="32"/>
<button type="button" onclick="genPass()">Generate</button>
Number of words <input type="text" id="numWords" value="$numWords" size="2"/>
<p>
<textarea name="data" cols="80" rows="10">$data</textarea>
<p>
<input type="hidden" name="path" value="$path"/>
<button type="submit">Save</button>
<button type="button" onclick="window.open('/view?path=$urlPath', '_self')">Cancel</button>
</form>
END
}

sub view
{
    my ($s, $path) = @_;
    my $urlPath;

    ($path, $urlPath) = $s->getPath($path);

    $s->getPassphrase($path) or return;
    my ($pass, $data) = $s->readPass($path);
    return $s->error("Can't decrypt") unless defined $pass;
    my $date =
	qx(git -C '$store' log -1 --date=local --pretty="format:%cd" '$path.gpg');
    (my $clipPass = $pass) =~ s/\\/\\\\/g;

    $s->startPage("View: $path");
    print <<END;
  <h2 style="display: inline-block">$path</h2>
  <h5 style="display: inline-block">$date</h5>
<br>
Password
<div style="border: 1px solid black; display: inline-block;">
    &nbsp;$pass&nbsp;
</div>
<button onclick="copyText()">Copy</button>
<pre>$data</pre>
<p>
<button onclick="window.open('/edit?path=$urlPath', '_self')">Edit</button>
<button onclick="window.open('/rename?path=$urlPath', '_self')">Rename</button>
<button onclick="window.open('/delete?path=$urlPath', '_self')">Delete</button>
<button onclick="window.open('/pass', '_self')">Done</button>
<script>function copyText() { navigator.clipboard.writeText('$clipPass'); }</script>
END
}

sub delete
{
    my $s = shift;
    my ($path, $urlPath) = $s->getPath;

    $s->startPage("Delete: $path");
    print <<END;
Delete <b>$path</b><p>
Are you sure?
<button type="button" onclick="window.open('/pass?path=$urlPath&delete=1', '_self')">Yes</button>
<button type="button" onclick="window.open('/view?path=$urlPath', '_self')">Cancel</button>
END
}

sub readPass
{
    my ($s, $path) = @_;

    my $args = $container ?
	"--pinentry-mode loopback --passphrase $s->{passphrase}" : '';

    open my $gpg, "gpg -q $args -d $store/'${path}.gpg'|" or die;
    my $pass = <$gpg>;
    $pass =~ s/[\r\n]$//g if defined $pass;

    my $data;
    {
	local $/;
	$data = <$gpg>;
    }

    delete $s->{passphrase} unless defined $pass;
    $data ||= '';	# prevent warning
    ($pass, $data);
}

sub pass
{
    my $s = shift;
    my $refresh = $s->{cgi}->param('refresh');
    my ($path, $urlPath) = $s->getPath;

    if ($s->{cgi}->param('delete'))
    {
	$s->git("rm '${path}.gpg'");
	$s->git("commit -m 'deleted $path' '${path}.gpg'");
	$refresh = 1;
    }
    elsif ($s->{cgi}->param('rename'))
    {
	(my $rename = $s->{cgi}->param('rename')) =~ s%^/|/$|^\s*|\s*$%%g;

	if ($rename)
	{
	    return $s->error("Can't use apostrophe in name") if $rename =~ /'/;

	    my ($dir) = ($rename =~ m%(.+)/%) || '';
	    qx%mkdir -p "$store/$dir"% if $dir and !-d "$store/$dir";

	    $s->git("mv '${path}.gpg' '${rename}.gpg'") or
		return $s->error("Can't rename '$path' to '$rename'");
	    $s->git("commit -m 'renamed $path to $rename' '${path}.gpg' '${rename}.gpg'");
	    $refresh = 1;
	}
    }

    $s->doSync if time - $s->{lastSync} > RESYNC_SECONDS;

    if ($refresh)
    {
	$s->getTree;
	print $s->{cgi}->header,
	    "<script>window.open('/pass', '_self');</script>";
	return;
    }

    my $search = $s->{cgi}->param('search') || '';

    seek DATA, $s->{dataPos}, 0;	# seek to the start of the data

    $s->startPage('Passwords', 1);

    while (<DATA>)
    {
	last if /^END_OF_HEADER/;
	print;
    }

    $s->{listPos} = tell DATA;		# remember start of word list position

    print <<END if $container and !-r AGENT;
<font color=\"#c00000\">*** Warning: no agent configuration file ***</font><p>
END

    print <<END;
<form action="/pass" method="get">
  <input type="text" name="search" placeholder="Search..." value="$search"/>
  <input type="submit" value="Search"/>
  <button type="button" onclick='window.open("/pass", "_self")'>Clear</button>
  <button type="button" id="expandButton" onclick="toggleExpand()">Expand</button>
  <button type="button" onclick='window.open("/pass?expand=1", "_self")'>Show All</button>
  <button type="button" onclick='window.open("/add?path=" + (typeof selected === "undefined" ? "/" : selected.id), "_self")'>Add</button>
  <button type="button" onclick='window.open("/sync", "_self")'>Sync</button>
</form>

<ul id="Tree">
END

    my $tree;

    if ($search)
    {
	$tree = $s->filterTree($s->{tree}, $search);

	if (!keys %{$tree})
	{
	    print '<p style="color:red;">No results found</p>';
	    $tree = $s->{tree};
	    undef $search;
	}
    }
    else
    {
	$tree = $s->{tree};
    }

    $s->showTree($tree);
    print '</ul>';

    print <<END;
<script>
var toggler = document.getElementsByClassName("caret");
var i;
var selected;

for (i = 0; i < toggler.length; i++) {
  toggler[i].addEventListener("click", function() {
    this.parentElement.querySelector(".nested").classList.toggle("active");
    this.classList.toggle("caret-down");

    if (selected)
    {
        selected.style.backgroundColor = "";
    }
    this.style.backgroundColor = "lightblue";
    selected = this;
  });
}
</script>
END

    print "<script>toggleExpand();</script>" if $search ||
	$s->{cgi}->param('expand');
}

sub hashify
{
    my ($s, $path) = @_;

    my @a = split /\//, $path;
    my $value = pop @a;
    my $ref = \$s->{tree};
    $ref = \$$ref->{$_} for @a;
    push @{${$ref}->{_files}}, $value;
}

sub getTree
{
    my $s = shift;

    open my $tree, "find $store -name '*.gpg'|" or die;

    $s->{tree} = {};

    while (<$tree>)
    {
	s/[\r\n]$//g;
	s%$store/|\.gpg$%%g;
	$s->hashify($_);
    }
}

sub showTree
{
    my ($s, $tree, $path) = @_;

    $path ||= '';	# prevent warning

    for (sort { "\L$a" cmp "\L$b" }
	 grep { ref $tree->{$_} eq 'HASH' } keys %{$tree})
    {
	print <<END;
<li><span class="caret" id="@{[$s->urlEncode("$path/$_")]}">$_</span>
<ul class="nested">
END
	$s->showTree($tree->{$_}, "$path/$_");
	print '</ul></li>';
    }

    if (exists $tree->{_files})
    {
	print <<END for sort { "\L$a" cmp "\L$b" } @{$tree->{_files}};
<li>
  <a href="/"
    onclick="window.open('/view?path=@{[$s->urlEncode("$path/$_")]}','_self'); return false;">
    $_
  </a>
</li>
END
    }
}

sub filterTree
{
    my ($s, $src, $filter) = @_;
    my $dst = {};

    for (keys %{$src})
    {
	if ($_ eq '_files')
	{
	    @{$dst->{$_}} = grep { /$filter/i } @{$src->{$_}};
	    delete $dst->{$_} unless @{$dst->{$_}};
	}
	elsif (/$filter/i)	# match directory
	{
	    $dst->{$_} = $src->{$_};
	}
	else
	{
	    $dst->{$_} = $s->filterTree($src->{$_}, $filter);
	    delete $dst->{$_} unless keys %{$dst->{$_}};
	}
    }

    $dst;
}

sub urlEncode
{
    my ($s, $string) = @_;
    $string =~ s/([ -?])/%@{[sprintf '%02x', unpack 'c', $1]}/g;
    $string;
}

sub getPath
{
    my ($s, $path) = @_;

    $path ||= $s->{cgi}->param('path');
    return ('', '') unless $path;

    $path =~ s%^/%%;
    ($path, $s->urlEncode($path));
}

sub passphrase
{
    my $s = shift;

    $s->{passphrase} = $s->{cgi}->param('passphrase');
    $s->{passphraseTime} = time;

    my $func = $s->{cgi}->param('type') =~ /view/ ? \&view : \&edit;
    $s->$func(scalar $s->{cgi}->param('path'));
}

sub getPassphrase
{
    my ($s, $path) = @_;

    return 1 if !$container or
	(exists $s->{passphrase} and time - $s->{passphraseTime} < $timeout);

    $s->startPage('Enter passphrase');
    print <<END;
<form action="/passphrase" method="post">
  Passphrase
  <input type="password" name="passphrase" size="40"/><p>
  <input type="hidden" name="type"
         value="@{[$s->{cgi}->url(-path_info=>1, -relative=>1)]}"/>
  <input type="hidden" name="path" value="$path"/>
  <input type="submit" value="OK"/>
</form>
END

    0;
}

sub startPage
{
    my ($s, $title, $noBody) = @_;

    print $s->{cgi}->
	header(-Cache_Control=>'no-cache, no-store, must-revalidate');

    print <<END;
<!DOCTYPE html>
<html>
<head>
    <title>$title</title>
    <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"/>
END

    print "</head>\n<body>\n" unless $noBody;
    $s->{pageStarted} = 1;
}

__DATA__
<style>
/* Remove default bullets */
ul { list-style-type: none; }

/* Style the caret/arrow */
.caret {
  cursor: pointer;
  user-select: none; /* Prevent text selection */
}

/* Create the caret/arrow with a unicode, and style it */
.caret::before {
  content: "\25B6";
  color: black;
  display: inline-block;
  margin-right: 6px;
}

/* Rotate the caret/arrow icon when clicked on (using JavaScript) */
.caret-down::before { transform: rotate(90deg); }

/* Hide the nested list */
.nested { display: none; }

/* Show the nested list when the user clicks on the caret/arrow (with JavaScript) */
.active { display: block; }

/* remove underlines from links */
a:link { text-decoration: none; }
a:visited { text-decoration: none; }
a:hover { text-decoration: none; }
a:active { text-decoration: none; }
</style>
</head>
<body>

<script>
function toggleExpand()
{
    var toggler = document.getElementsByClassName("caret");
    var button = document.getElementById("expandButton");
    var i;

    if (button.innerHTML == "Expand")
    {
	for (i = 0; i < toggler.length; i++)
	{
	    toggler[i].classList.add("caret-down");
	    toggler[i].parentElement.querySelector(".nested").
		classList.add("active");
	}

	button.innerHTML = "Collapse";
    }
    else
    {
	for (i = 0; i < toggler.length; i++)
	{
	    toggler[i].classList.remove("caret-down");
	    toggler[i].parentElement.querySelector(".nested").
		classList.remove("active");
	}

	button.innerHTML = "Expand";
    }
}
</script>
END_OF_HEADER
a
abandon
ability
able
abortion
about
above
abroad
absence
absolute
absolutely
absorb
abuse
academic
accept
access
accident
accompany
accomplish
according
account
accurate
accuse
achieve
achievement
acid
acknowledge
acquire
across
act
action
active
activist
activity
actor
actress
actual
actually
ad
adapt
add
addition
additional
address
adequate
adjust
adjustment
administration
administrator
admire
admission
admit
adolescent
adopt
adult
advance
advanced
advantage
adventure
advertising
advice
advise
adviser
advocate
affair
affect
afford
afraid
African
African-American
after
afternoon
again
against
age
agency
agenda
agent
aggressive
ago
agree
agreement
agricultural
ah
ahead
aid
aide
AIDS
aim
air
aircraft
airline
airport
album
alcohol
alive
all
alliance
allow
ally
almost
alone
along
already
also
alter
alternative
although
always
AM
amazing
American
among
amount
analysis
analyst
analyze
ancient
and
anger
angle
angry
animal
anniversary
announce
annual
another
answer
anticipate
anxiety
any
anybody
anymore
anyone
anything
anyway
anywhere
apart
apartment
apparent
apparently
appeal
appear
appearance
apple
application
apply
appoint
appointment
appreciate
approach
appropriate
approval
approve
approximately
Arab
architect
area
argue
argument
arise
arm
armed
army
around
arrange
arrangement
arrest
arrival
arrive
art
article
artist
artistic
as
Asian
aside
ask
asleep
aspect
assault
assert
assess
assessment
asset
assign
assignment
assist
assistance
assistant
associate
association
assume
assumption
assure
at
athlete
athletic
atmosphere
attach
attack
attempt
attend
attention
attitude
attorney
attract
attractive
attribute
audience
author
authority
auto
available
average
avoid
award
aware
awareness
away
awful
baby
back
background
bad
badly
bag
bake
balance
ball
ban
band
bank
bar
barely
barrel
barrier
base
baseball
basic
basically
basis
basket
basketball
bathroom
battery
battle
be
beach
bean
bear
beat
beautiful
beauty
because
become
bed
bedroom
beer
before
begin
beginning
behavior
behind
being
belief
believe
bell
belong
below
belt
bench
bend
beneath
benefit
beside
besides
best
bet
better
between
beyond
Bible
big
bike
bill
billion
bind
biological
bird
birth
birthday
bit
bite
black
blade
blame
blanket
blind
block
blood
blow
blue
board
boat
body
bomb
bombing
bond
bone
book
boom
boot
border
born
borrow
boss
both
bother
bottle
bottom
boundary
bowl
box
boy
boyfriend
brain
branch
brand
bread
break
breakfast
breast
breath
breathe
brick
bridge
brief
briefly
bright
brilliant
bring
British
broad
broken
brother
brown
brush
buck
budget
build
building
bullet
bunch
burden
burn
bury
bus
business
busy
but
butter
button
buy
buyer
by
cabin
cabinet
cable
cake
calculate
call
camera
camp
campaign
campus
can
Canadian
cancer
candidate
cap
capability
capable
capacity
capital
captain
capture
car
carbon
card
care
career
careful
carefully
carrier
carry
case
cash
cast
cat
catch
category
Catholic
cause
ceiling
celebrate
celebration
celebrity
cell
center
central
century
CEO
ceremony
certain
certainly
chain
chair
chairman
challenge
chamber
champion
championship
chance
change
changing
channel
chapter
character
characteristic
characterize
charge
charity
chart
chase
cheap
check
cheek
cheese
chef
chemical
chest
chicken
chief
child
childhood
Chinese
chip
chocolate
choice
cholesterol
choose
Christian
Christmas
church
cigarette
circle
circumstance
cite
citizen
city
civil
civilian
claim
class
classic
classroom
clean
clear
clearly
client
climate
climb
clinic
clinical
clock
close
closely
closer
clothes
clothing
cloud
club
clue
cluster
coach
coal
coalition
coast
coat
code
coffee
cognitive
cold
collapse
colleague
collect
collection
collective
college
colonial
color
column
combination
combine
come
comedy
comfort
comfortable
command
commander
comment
commercial
commission
commit
commitment
committee
common
communicate
communication
community
company
compare
comparison
compete
competition
competitive
competitor
complain
complaint
complete
completely
complex
complicated
component
compose
composition
comprehensive
computer
concentrate
concentration
concept
concern
concerned
concert
conclude
conclusion
concrete
condition
conduct
conference
confidence
confident
confirm
conflict
confront
confusion
Congress
congressional
connect
connection
consciousness
consensus
consequence
conservative
consider
considerable
consideration
consist
consistent
constant
constantly
constitute
constitutional
construct
construction
consultant
consume
consumer
consumption
contact
contain
container
contemporary
content
contest
context
continue
continued
contract
contrast
contribute
contribution
control
controversial
controversy
convention
conventional
conversation
convert
conviction
convince
cook
cookie
cooking
cool
cooperation
cop
cope
copy
core
corn
corner
corporate
corporation
correct
correspondent
cost
cotton
couch
could
council
counselor
count
counter
country
county
couple
courage
course
court
cousin
cover
coverage
cow
crack
craft
crash
crazy
cream
create
creation
creative
creature
credit
crew
crime
criminal
crisis
criteria
critic
critical
criticism
criticize
crop
cross
crowd
crucial
cry
cultural
culture
cup
curious
current
currently
curriculum
custom
customer
cut
cycle
dad
daily
damage
dance
danger
dangerous
dare
dark
darkness
data
date
daughter
day
dead
deal
dealer
dear
death
debate
debt
decade
decide
decision
deck
declare
decline
decrease
deep
deeply
deer
defeat
defend
defendant
defense
defensive
deficit
define
definitely
definition
degree
delay
deliver
delivery
demand
democracy
Democrat
democratic
demonstrate
demonstration
deny
department
depend
dependent
depending
depict
depression
depth
deputy
derive
describe
description
desert
deserve
design
designer
desire
desk
desperate
despite
destroy
destruction
detail
detailed
detect
determine
develop
developing
development
device
devote
dialogue
die
diet
differ
difference
different
differently
difficult
difficulty
dig
digital
dimension
dining
dinner
direct
direction
directly
director
dirt
dirty
disability
disagree
disappear
disaster
discipline
discourse
discover
discovery
discrimination
discuss
discussion
disease
dish
dismiss
disorder
display
dispute
distance
distant
distinct
distinction
distinguish
distribute
distribution
district
diverse
diversity
divide
division
divorce
DNA
do
doctor
document
dog
domestic
dominant
dominate
door
double
doubt
down
downtown
dozen
draft
drag
drama
dramatic
dramatically
draw
drawing
dream
dress
drink
drive
driver
drop
drug
dry
due
during
dust
duty
each
eager
ear
early
earn
earnings
earth
ease
easily
east
eastern
easy
eat
economic
economics
economist
economy
edge
edition
editor
educate
education
educational
educator
effect
effective
effectively
efficiency
efficient
effort
egg
eight
either
elderly
elect
election
electric
electricity
electronic
element
elementary
eliminate
elite
else
elsewhere
e-mail
embrace
emerge
emergency
emission
emotion
emotional
emphasis
emphasize
employ
employee
employer
employment
empty
enable
encounter
encourage
end
enemy
energy
enforcement
engage
engine
engineer
engineering
English
enhance
enjoy
enormous
enough
ensure
enter
enterprise
entertainment
entire
entirely
entrance
entry
environment
environmental
episode
equal
equally
equipment
era
error
escape
especially
essay
essential
essentially
establish
establishment
estate
estimate
etc
ethics
ethnic
European
evaluate
evaluation
even
evening
event
eventually
ever
every
everybody
everyday
everyone
everything
everywhere
evidence
evolution
evolve
exact
exactly
examination
examine
example
exceed
excellent
except
exception
exchange
exciting
executive
exercise
exhibit
exhibition
exist
existence
existing
expand
expansion
expect
expectation
expense
expensive
experience
experiment
expert
explain
explanation
explode
explore
explosion
expose
exposure
express
expression
extend
extension
extensive
extent
external
extra
extraordinary
extreme
extremely
eye
fabric
face
facility
fact
factor
factory
faculty
fade
fail
failure
fair
fairly
faith
fall
false
familiar
family
famous
fan
fantasy
far
farm
farmer
fashion
fast
fat
fate
father
fault
favor
favorite
fear
feature
federal
fee
feed
feel
feeling
fellow
female
fence
few
fewer
fiber
fiction
field
fifteen
fifth
fifty
fight
fighter
fighting
figure
file
fill
film
final
finally
finance
financial
find
finding
fine
finger
finish
fire
firm
first
fish
fishing
fit
fitness
five
fix
flag
flame
flat
flavor
flee
flesh
flight
float
floor
flow
flower
fly
focus
folk
follow
following
food
foot
football
for
force
foreign
forest
forever
forget
form
formal
formation
former
formula
forth
fortune
forward
found
foundation
founder
four
fourth
frame
framework
free
freedom
freeze
French
frequency
frequent
frequently
fresh
friend
friendly
friendship
from
front
fruit
frustration
fuel
full
fully
fun
function
fund
fundamental
funding
funeral
funny
furniture
furthermore
future
gain
galaxy
gallery
game
gang
gap
garage
garden
garlic
gas
gate
gather
gay
gaze
gear
gender
gene
general
generally
generate
generation
genetic
gentleman
gently
German
gesture
get
ghost
giant
gift
gifted
girl
girlfriend
give
given
glad
glance
glass
global
glove
go
goal
God
gold
golden
golf
good
government
governor
grab
grade
gradually
graduate
grain
grand
grandfather
grandmother
grant
grass
grave
gray
great
greatest
green
grocery
ground
group
grow
growing
growth
guarantee
guard
guess
guest
guide
guideline
guilty
gun
guy
habit
habitat
hair
half
hall
hand
handful
handle
hang
happen
happy
hard
hardly
hat
hate
have
he
head
headline
headquarters
health
healthy
hear
hearing
heart
heat
heaven
heavily
heavy
heel
height
helicopter
hell
hello
help
helpful
her
here
heritage
hero
herself
hey
hi
hide
high
highlight
highly
highway
hill
him
himself
hip
hire
his
historian
historic
historical
history
hit
hold
hole
holiday
holy
home
homeless
honest
honey
honor
hope
horizon
horror
horse
hospital
host
hot
hotel
hour
house
household
housing
how
however
huge
human
humor
hundred
hungry
hunter
hunting
hurt
husband
hypothesis
I
ice
idea
ideal
identification
identify
identity
ie
if
ignore
ill
illegal
illness
illustrate
image
imagination
imagine
immediate
immediately
immigrant
immigration
impact
implement
implication
imply
importance
important
impose
impossible
impress
impression
impressive
improve
improvement
in
incentive
incident
include
including
income
incorporate
increase
increased
increasing
increasingly
incredible
indeed
independence
independent
index
Indian
indicate
indication
individual
industrial
industry
infant
infection
inflation
influence
inform
information
ingredient
initial
initially
initiative
injury
inner
innocent
inquiry
inside
insight
insist
inspire
install
instance
instead
institution
institutional
instruction
instructor
instrument
insurance
intellectual
intelligence
intend
intense
intensity
intention
interaction
interest
interested
interesting
internal
international
Internet
interpret
interpretation
intervention
interview
into
introduce
introduction
invasion
invest
investigate
investigation
investigator
investment
investor
invite
involve
involved
involvement
Iraqi
Irish
iron
Islamic
island
Israeli
issue
it
Italian
item
its
itself
jacket
jail
Japanese
jet
Jew
Jewish
job
join
joint
joke
journal
journalist
journey
joy
judge
judgment
juice
jump
junior
jury
just
justice
justify
keep
key
kick
kid
kill
killer
killing
kind
king
kiss
kitchen
knee
knife
knock
know
knowledge
lab
label
labor
laboratory
lack
lady
lake
land
landscape
language
lap
large
largely
last
late
later
Latin
latter
laugh
launch
law
lawn
lawsuit
lawyer
lay
layer
lead
leader
leadership
leading
leaf
league
lean
learn
learning
least
leather
leave
left
leg
legacy
legal
legend
legislation
legitimate
lemon
length
less
lesson
let
letter
level
liberal
library
license
lie
life
lifestyle
lifetime
lift
light
like
likely
limit
limitation
limited
line
link
lip
list
listen
literally
literary
literature
little
live
living
load
loan
local
locate
location
lock
long
long-term
look
loose
lose
loss
lost
lot
lots
loud
love
lovely
lover
low
lower
luck
lucky
lunch
lung
machine
mad
magazine
mail
main
mainly
maintain
maintenance
major
majority
make
maker
makeup
male
mall
man
manage
management
manager
manner
manufacturer
manufacturing
many
map
margin
mark
market
marketing
marriage
married
marry
mask
mass
massive
master
match
material
math
matter
may
maybe
mayor
me
meal
mean
meaning
meanwhile
measure
measurement
meat
mechanism
media
medical
medication
medicine
medium
meet
meeting
member
membership
memory
mental
mention
menu
mere
merely
mess
message
metal
meter
method
Mexican
middle
might
military
milk
million
mind
mine
minister
minor
minority
minute
miracle
mirror
miss
missile
mission
mistake
mix
mixture
mm-hmm
mode
model
moderate
modern
modest
mom
moment
money
monitor
month
mood
moon
moral
more
moreover
morning
mortgage
most
mostly
mother
motion
motivation
motor
mount
mountain
mouse
mouth
move
movement
movie
Mr
Mrs
Ms
much
multiple
murder
muscle
museum
music
musical
musician
Muslim
must
mutual
my
myself
mystery
myth
naked
name
narrative
narrow
nation
national
native
natural
naturally
nature
near
nearby
nearly
necessarily
necessary
neck
need
negative
negotiate
negotiation
neighbor
neighborhood
neither
nerve
nervous
net
network
never
nevertheless
new
newly
news
newspaper
next
nice
night
nine
no
nobody
nod
noise
nomination
none
nonetheless
nor
normal
normally
north
northern
nose
not
note
nothing
notice
notion
novel
now
nowhere
n't
nuclear
number
numerous
nurse
nut
object
objective
obligation
observation
observe
observer
obtain
obvious
obviously
occasion
occasionally
occupation
occupy
occur
ocean
odd
odds
of
off
offense
offensive
offer
office
officer
official
often
oh
oil
ok
okay
old
Olympic
on
once
one
ongoing
onion
online
only
onto
open
opening
operate
operating
operation
operator
opinion
opponent
opportunity
oppose
opposite
opposition
option
or
orange
order
ordinary
organic
organization
organize
orientation
origin
original
originally
other
others
otherwise
ought
our
ourselves
out
outcome
outside
oven
over
overall
overcome
overlook
owe
own
owner
pace
pack
package
page
pain
painful
paint
painter
painting
pair
pale
Palestinian
palm
pan
panel
pant
paper
parent
park
parking
part
participant
participate
participation
particular
particularly
partly
partner
partnership
party
pass
passage
passenger
passion
past
patch
path
patient
pattern
pause
pay
payment
PC
peace
peak
peer
penalty
people
pepper
per
perceive
percentage
perception
perfect
perfectly
perform
performance
perhaps
period
permanent
permission
permit
person
personal
personality
personally
personnel
perspective
persuade
pet
phase
phenomenon
philosophy
phone
photo
photograph
photographer
phrase
physical
physically
physician
piano
pick
picture
pie
piece
pile
pilot
pine
pink
pipe
pitch
place
plan
plane
planet
planning
plant
plastic
plate
platform
play
player
please
pleasure
plenty
plot
plus
PM
pocket
poem
poet
poetry
point
pole
police
policy
political
politically
politician
politics
poll
pollution
pool
poor
pop
popular
population
porch
port
portion
portrait
portray
pose
position
positive
possess
possibility
possible
possibly
post
pot
potato
potential
potentially
pound
pour
poverty
powder
power
powerful
practical
practice
pray
prayer
precisely
predict
prefer
preference
pregnancy
pregnant
preparation
prepare
prescription
presence
present
presentation
preserve
president
presidential
press
pressure
pretend
pretty
prevent
previous
previously
price
pride
priest
primarily
primary
prime
principal
principle
print
prior
priority
prison
prisoner
privacy
private
probably
problem
procedure
proceed
process
produce
producer
product
production
profession
professional
professor
profile
profit
program
progress
project
prominent
promise
promote
prompt
proof
proper
properly
property
proportion
proposal
propose
proposed
prosecutor
prospect
protect
protection
protein
protest
proud
prove
provide
provider
province
provision
psychological
psychologist
psychology
public
publication
publicly
publish
publisher
pull
punishment
purchase
pure
purpose
pursue
push
put
qualify
quality
quarter
quarterback
question
quick
quickly
quiet
quietly
quit
quite
quote
race
racial
radical
radio
rail
rain
raise
range
rank
rapid
rapidly
rare
rarely
rate
rather
rating
ratio
raw
reach
react
reaction
read
reader
reading
ready
real
reality
realize
really
reason
reasonable
recall
receive
recent
recently
recipe
recognition
recognize
recommend
recommendation
record
recording
recover
recovery
recruit
red
reduce
reduction
refer
reference
reflect
reflection
reform
refugee
refuse
regard
regarding
regardless
regime
region
regional
register
regular
regularly
regulate
regulation
reinforce
reject
relate
relation
relationship
relative
relatively
relax
release
relevant
relief
religion
religious
rely
remain
remaining
remarkable
remember
remind
remote
remove
repeat
repeatedly
replace
reply
report
reporter
represent
representation
representative
Republican
reputation
request
require
requirement
research
researcher
resemble
reservation
resident
resist
resistance
resolution
resolve
resort
resource
respect
respond
respondent
response
responsibility
responsible
rest
restaurant
restore
restriction
result
retain
retire
retirement
return
reveal
revenue
review
revolution
rhythm
rice
rich
rid
ride
rifle
right
ring
rise
risk
river
road
rock
role
roll
romantic
roof
room
root
rope
rose
rough
roughly
round
route
routine
row
rub
rule
run
running
rural
rush
Russian
sacred
sad
safe
safety
sake
salad
salary
sale
sales
salt
same
sample
sanction
sand
satellite
satisfaction
satisfy
sauce
save
saving
say
scale
scandal
scared
scenario
scene
schedule
scheme
scholar
scholarship
school
science
scientific
scientist
scope
score
scream
screen
script
sea
search
season
seat
second
secret
secretary
section
sector
secure
security
see
seed
seek
seem
segment
seize
select
selection
self
sell
Senate
senator
send
senior
sense
sensitive
sentence
separate
sequence
series
serious
seriously
serve
service
session
set
setting
settle
settlement
seven
several
severe
sex
sexual
shade
shadow
shake
shall
shape
share
sharp
she
sheet
shelf
shell
shelter
shift
shine
ship
shirt
shit
shock
shoe
shoot
shooting
shop
shopping
shore
short
shortly
shot
should
shoulder
shout
show
shower
shrug
shut
sick
side
sigh
sight
sign
signal
significance
significant
significantly
silence
silent
silver
similar
similarly
simple
simply
sin
since
sing
singer
single
sink
sir
sister
sit
site
situation
six
size
ski
skill
skin
sky
slave
sleep
slice
slide
slight
slightly
slip
slow
slowly
small
smart
smell
smile
smoke
smooth
snap
snow
so
so-called
soccer
social
society
soft
software
soil
solar
soldier
solid
solution
solve
some
somebody
somehow
someone
something
sometimes
somewhat
somewhere
son
song
soon
sophisticated
sorry
sort
soul
sound
soup
source
south
southern
Soviet
space
Spanish
speak
speaker
special
specialist
species
specific
specifically
speech
speed
spend
spending
spin
spirit
spiritual
split
spokesman
sport
spot
spread
spring
square
squeeze
stability
stable
staff
stage
stair
stake
stand
standard
standing
star
stare
start
state
statement
station
statistics
status
stay
steady
steal
steel
step
stick
still
stir
stock
stomach
stone
stop
storage
store
storm
story
straight
strange
stranger
strategic
strategy
stream
street
strength
strengthen
stress
stretch
strike
string
strip
stroke
strong
strongly
structure
struggle
student
studio
study
stuff
stupid
style
subject
submit
subsequent
substance
substantial
succeed
success
successful
successfully
such
sudden
suddenly
sue
suffer
sufficient
sugar
suggest
suggestion
suicide
suit
summer
summit
sun
super
supply
support
supporter
suppose
supposed
Supreme
sure
surely
surface
surgery
surprise
surprised
surprising
surprisingly
surround
survey
survival
survive
survivor
suspect
sustain
swear
sweep
sweet
swim
swing
switch
symbol
symptom
system
table
tablespoon
tactic
tail
take
tale
talent
talk
tall
tank
tap
tape
target
task
taste
tax
taxpayer
tea
teach
teacher
teaching
team
tear
teaspoon
technical
technique
technology
teen
teenager
telephone
telescope
television
tell
temperature
temporary
ten
tend
tendency
tennis
tension
tent
term
terms
terrible
territory
terror
terrorism
terrorist
test
testify
testimony
testing
text
than
thank
thanks
that
the
theater
their
them
theme
themselves
then
theory
therapy
there
therefore
these
they
thick
thin
thing
think
thinking
third
thirty
this
those
though
thought
thousand
threat
threaten
three
throat
through
throughout
throw
thus
ticket
tie
tight
time
tiny
tip
tire
tired
tissue
title
to
tobacco
today
toe
together
tomato
tomorrow
tone
tongue
tonight
too
tool
tooth
top
topic
toss
total
totally
touch
tough
tour
tourist
tournament
toward
towards
tower
town
toy
trace
track
trade
tradition
traditional
traffic
tragedy
trail
train
training
transfer
transform
transformation
transition
translate
transportation
travel
treat
treatment
treaty
tree
tremendous
trend
trial
tribe
trick
trip
troop
trouble
truck
true
truly
trust
truth
try
tube
tunnel
turn
TV
twelve
twenty
twice
twin
two
type
typical
typically
ugly
ultimate
ultimately
unable
uncle
under
undergo
understand
understanding
unfortunately
uniform
union
unique
unit
United
universal
universe
university
unknown
unless
unlike
unlikely
until
unusual
up
upon
upper
urban
urge
us
use
used
useful
user
usual
usually
utility
vacation
valley
valuable
value
variable
variation
variety
various
vary
vast
vegetable
vehicle
venture
version
versus
very
vessel
veteran
via
victim
victory
video
view
viewer
village
violate
violation
violence
violent
virtually
virtue
virus
visible
vision
visit
visitor
visual
vital
voice
volume
volunteer
vote
voter
vs
vulnerable
wage
wait
wake
walk
wall
wander
want
war
warm
warn
warning
wash
waste
watch
water
wave
way
we
weak
wealth
wealthy
weapon
wear
weather
wedding
week
weekend
weekly
weigh
weight
welcome
welfare
well
west
western
wet
what
whatever
wheel
when
whenever
where
whereas
whether
which
while
whisper
white
who
whole
whom
whose
why
wide
widely
widespread
wife
wild
will
willing
win
wind
window
wine
wing
winner
winter
wipe
wire
wisdom
wise
wish
with
withdraw
within
without
witness
woman
wonder
wonderful
wood
wooden
word
work
worker
working
works
workshop
world
worried
worry
worth
would
wound
wrap
write
writer
writing
wrong
yard
yeah
year
yell
yellow
yes
yesterday
yet
yield
you
young
your
yours
yourself
youth
zone
